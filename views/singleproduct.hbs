{{! views/singleProduct.hbs }}
<!DOCTYPE html>
<html lang="en">
<head>
    {{> header}}
</head>
<body>
    {{> navbar_main }}

    <main class="container single-product-page my-4 mt-md-5 pt-3">
        {{#if successMessage}}
        <div class="alert alert-success alert-dismissible fade show mt-3" role="alert">
            {{successMessage}}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
        {{/if}}

        <nav aria-label="breadcrumb" class="mb-3 product-breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/">Home</a></li>
                <li class="breadcrumb-item"><a href="/allProduk?category_id={{product.category_id}}">{{product.category_name}}</a></li>
                <li class="breadcrumb-item active" aria-current="page">{{product.name}}</li>
            </ol>
        </nav>

        <div class="row g-md-4 g-lg-5">
            {{!-- Kolom Gambar Produk --}}
            <div class="col-lg-7 col-md-6 product-gallery">
                <div class="main-product-image mb-3 shadow-sm">
                    <img src="{{#if product.images.length}}{{product.images.[0].image_url}}{{else}}{{product.image_url}}{{/if}}"
                         alt="{{product.name}} Main Image" 
                         class="img-fluid rounded-3" 
                         id="mainProductImage">
                </div>
                {{#if (gt product.images.length 0)}} {{!-- Tampilkan thumbnails jika product.images ada dan tidak kosong --}}
                    {{#if (gt product.images.length 1)}} {{!-- Hanya buat baris thumbnail jika ada lebih dari 1 gambar di array --}}
                    <div class="product-thumbnails d-flex gap-2 mt-3">
                        {{#each product.images}}
                        <div class="thumbnail-item">
                            <img src="{{this.image_url}}"
                                 alt="{{../product.name}} Thumbnail {{add @index 1}}"
                                 class="img-fluid rounded-2 {{#if @first}}active-thumbnail{{/if}}"
                                 onclick="changeMainImage('{{this.image_url}}', this); stopCarousel();">
                        </div>
                        {{/each}}
                    </div>
                    {{/if}}
                {{else if product.image_url}}
                    {{! Jika product.images kosong TAPI product.image_url utama ada (sebagai satu-satunya gambar), jangan tampilkan thumbnail }}
                {{/if}}
            </div>

            {{!-- Kolom Detail dan Aksi Produk --}}
            <div class="col-lg-5 col-md-6 product-details-actions">
                <h1 class="product-title mb-2">{{product.name}}</h1>

                <div class="d-flex align-items-center mb-2">
                    <div class="product-rating-display">
                        {{{generateStars product.rating}}}
                    </div>
                    {{#if product.review_count}}
                        <a href="#reviews-tab-pane" class="ms-2 text-muted small product-review-link" onclick="activateReviewTab(event)">({{product.review_count}} Reviews)</a>
                    {{else}}
                        <span class="ms-2 text-muted small">(No Reviews Yet)</span>
                    {{/if}}
                </div>
                
                <div class="product-pricing mb-3">
                    <span class="current-price fs-2 fw-bold">{{{formatRupiah product.price}}}</span>

                </div>

                <p class="product-short-description text-muted mb-4">
                    {{truncate product.description 150}}
                </p>

                {{!-- Pilihan Warna (Contoh Placeholder) --}}
                <div class="product-options mb-3">
                    <label class="form-label fw-semibold">Color:</label>
                    <div class="color-swatches">
                        <button type="button" class="color-swatch active" style="background-color: #556B2F;" data-color="Olive" title="Olive"></button>
                        <button type="button" class="color-swatch" style="background-color: #000080;" data-color="Navy" title="Navy"></button>
                        <button type="button" class="color-swatch" style="background-color: #006400;" data-color="Dark Green" title="Dark Green"></button>
                    </div>
                </div>

                {{!-- Pilihan Ukuran (Contoh Placeholder) --}}
                <div class="product-options mb-4">
                    <label class="form-label fw-semibold">Size:</label>
                    <div class="size-selector btn-group" role="group" aria-label="Size selector">
                        <input type="radio" class="btn-check" name="size" id="sizeS" value="S" autocomplete="off">
                        <label class="btn btn-outline-dark size-option" for="sizeS">S</label>

                        <input type="radio" class="btn-check" name="size" id="sizeM" value="M" autocomplete="off" checked>
                        <label class="btn btn-outline-dark size-option" for="sizeM">M</label>

                        <input type="radio" class="btn-check" name="size" id="sizeL" value="L" autocomplete="off">
                        <label class="btn btn-outline-dark size-option" for="sizeL">L</label>

                        <input type="radio" class="btn-check" name="size" id="sizeXL" value="XL" autocomplete="off">
                        <label class="btn btn-outline-dark size-option" for="sizeXL">XL</label>
                    </div>
                </div>
                     <small class="text-muted d-block mt-1">Stock: {{product.stock}}</small>


                <div class="product-actions d-grid gap-2">
                    {{#if user}}
                        {{#if (neq product.user_id user.id)}} {{! Jika user login DAN BUKAN pemilik produk }}
                <div class="mb-4 quantity-control-group">
                    <label for="quantitySingleProduct" class="form-label fw-semibold">Quantity:</label>
                    <div class="input-group">
                        <button class="btn btn-outline-secondary" type="button" id="button-minus-single" aria-label="Decrease quantity">-</button>
                        <input type="number" id="quantitySingleProduct" class="form-control text-center fw-semibold" min="1" value="1" max="{{product.stock}}" aria-label="Product quantity"/>
                        <button class="btn btn-outline-secondary" type="button" id="button-plus-single" aria-label="Increase quantity">+</button>
                    </div>
                </div>
                            <button class="btn btn-dark btn-lg" id="btnAddToCartSingle"><i class="bi bi-cart-plus-fill me-2"></i>Add to Cart</button>
                            <button class="btn btn-outline-secondary btn-lg btn-wishlist-single {{#if isWishlisted}}wishlisted active{{/if}}" id="btnToggleWishlistPage" data-product-id="{{product.id}}">
                                {{#if isWishlisted}}
                                    <i class="bi bi-heart-fill text-danger"></i> <span>Remove from Wishlist</span>
                                {{else}}
                                    <i class="bi bi-heart"></i> <span>Add to Wishlist</span>
                                {{/if}}
                            </button>
                        {{else}}
                            <p class="alert alert-info text-center small">This is your own product. You cannot add it to your cart or wishlist.</p>
                        {{/if}}
                    {{else}} {{! Jika user belum login }}
                         <button class="btn btn-dark btn-lg" id="btnAddToCartSingle"><i class="bi bi-cart-plus-fill me-2"></i>Add to Cart</button>
                         <button class="btn btn-outline-secondary btn-lg btn-wishlist-single" id="btnToggleWishlistPage" data-product-id="{{product.id}}">
                            <i class="bi bi-heart"></i> <span>Add to Wishlist</span>
                         </button>
                    {{/if}}
                </div>
                
                {{#if user}}
                    {{#if (neq product.user_id user.id)}}
                        <button class="btn btn-outline-info w-100 mt-3" id="btnChatWithSeller" data-seller-id="{{product.user_id}}">
                            <i class="bi bi-chat-dots"></i> Chat with Seller
                        </button>
                    {{/if}}
                {{/if}}
            </div>
        </div>
        <hr class="my-4 my-lg-5">

        {{!-- Bagian Tab Informasi Produk --}}
        <div class="product-info-tabs mt-4" id="productInfoTabs">
            <ul class="nav nav-tabs nav-fill mb-4" id="productDetailTab" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active" id="details-tab" data-bs-toggle="tab" data-bs-target="#details-tab-pane" type="button" role="tab" aria-controls="details-tab-pane" aria-selected="true">Product Details</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="reviews-tab" data-bs-toggle="tab" data-bs-target="#reviews-tab-pane" type="button" role="tab" aria-controls="reviews-tab-pane" aria-selected="false">Rating & Reviews ({{product.review_count}})</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="faq-tab" data-bs-toggle="tab" data-bs-target="#faq-tab-pane" type="button" role="tab" aria-controls="faq-tab-pane" aria-selected="false">FAQs</button>
                </li>
            </ul>
            <div class="tab-content" id="productDetailTabContent">
                <div class="tab-pane fade show active" id="details-tab-pane" role="tabpanel" aria-labelledby="details-tab" tabindex="0">
                    <h5 class="mb-3">Product Description</h5>
                    <p style="white-space: pre-wrap;">{{{product.description}}}</p> {{!-- Gunakan triple stash jika deskripsi mengandung HTML yang aman --}}
                </div>

                <div class="tab-pane fade" id="reviews-tab-pane" role="tabpanel" aria-labelledby="reviews-tab" tabindex="0">
                    <div class="product-reviews-section">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <h4>All Reviews ({{reviews.length}})</h4>
                            {{#if user}}
                                {{#if (neq product.user_id user.id)}}
                                <button class="btn btn-dark" type="button" data-bs-toggle="collapse" data-bs-target="#collapseReviewForm" aria-expanded="false" aria-controls="collapseReviewForm">
                                    Write a Review
                                </button>
                                {{/if}}
                            {{/if}}
                        </div>

                        {{#if user}}
                            {{#if (neq product.user_id user.id)}}
                            <div class="collapse mb-4" id="collapseReviewForm">
                                <div class="card card-body">
                                    <form id="formReviewProduct">
                                        <div class="mb-3">
                                            <label for="productRatingStars" class="form-label">Your Rating:</label>
                                            <div id="productRatingStars" class="star-rating-input">
                                                <i class="bi bi-star" data-value="1" title="Terrible"></i>
                                                <i class="bi bi-star" data-value="2" title="Poor"></i>
                                                <i class="bi bi-star" data-value="3" title="Average"></i>
                                                <i class="bi bi-star" data-value="4" title="Good"></i>
                                                <i class="bi bi-star" data-value="5" title="Excellent"></i>
                                                <input type="hidden" name="rating" id="ratingValueInput" required>
                                            </div>
                                        </div>
                                        <div class="mb-3">
                                            <label for="reviewText" class="form-label">Your Review:</label>
                                            <textarea class="form-control" id="reviewText" name="review_text" rows="3" placeholder="Write your review here..."></textarea>
                                        </div>
                                        <button type="submit" class="btn btn-dark">Submit Review</button>
                                    </form>
                                </div>
                            </div>
                            {{/if}}
                        {{else}}
                        <p class="mt-3"><a href="/login?redirect=/product/{{product.id}}#reviews-tab-pane">Login</a> to write a review.</p>
                        {{/if}}

                        {{#if reviews.length}}
                            <div class="list-group mt-3">
                                {{#each reviews}}
                                <div class="list-group-item list-group-item-action flex-column align-items-start mb-3 border rounded-3 shadow-sm">
                                    <div class="d-flex w-100 justify-content-between">
                                        <h6 class="mb-1 review-user-name fw-bold">{{this.reviewer_name}}</h6>
                                        <small class="review-date text-muted">{{formatDate this.created_at}}</small>
                                    </div>
                                    <div class="mb-1 product-rating-display review-stars">
                                        {{{generateStars this.rating}}}
                                    </div>
                                    <p class="mb-1 review-text" style="white-space: pre-wrap;">{{this.review_text}}</p>
                                </div>
                                {{/each}}
                            </div>
                        {{else}}
                             {{#unless user}} {{! Jika tidak ada user dan tidak ada review }}
                                <p class="mt-3 text-muted"><em>There are no reviews for this product yet.</em></p>
                             {{else}}
                                {{#if (neq product.user_id user.id)}} {{! Jika user login, bukan pemilik, dan belum ada review }}
                                    <p class="mt-3 text-muted"><em>There are no reviews for this product yet. Be the first to write one!</em></p>
                                {{else}} {{! Jika user adalah pemilik dan belum ada review }}
                                     <p class="mt-3 text-muted"><em>There are no reviews for this product yet.</em></p>
                                {{/if}}
                             {{/unless}}
                        {{/if}}
                    </div>
                </div>
                <div class="tab-pane fade" id="faq-tab-pane" role="tabpanel" aria-labelledby="faq-tab" tabindex="0">
                    <h5 class="mb-3">Frequently Asked Questions</h5>
                    <div class="accordion" id="faqAccordion">
                        <div class="accordion-item">
                            <h2 class="accordion-header" id="headingOne">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="false" aria-controls="collapseOne">
                                    What materials is this product made of?
                                </button>
                            </h2>
                            <div id="collapseOne" class="accordion-collapse collapse" aria-labelledby="headingOne" data-bs-parent="#faqAccordion">
                                <div class="accordion-body">
                                    This product is primarily made from 100% organic cotton, ensuring both comfort and sustainability.
                                </div>
                            </div>
                        </div>
                        <div class="accordion-item">
                            <h2 class="accordion-header" id="headingTwo">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                                    How do I care for this product?
                                </button>
                            </h2>
                            <div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#faqAccordion">
                                <div class="accordion-body">
                                    We recommend machine washing cold with similar colors and tumble drying on low. Do not bleach.
                                </div>
                            </div>
                        </div>
                        <div class="accordion-item">
                            <h2 class="accordion-header" id="headingThree">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                                    What is your return policy?
                                </button>
                            </h2>
                            <div id="collapseThree" class="accordion-collapse collapse" aria-labelledby="headingThree" data-bs-parent="#faqAccordion">
                                <div class="accordion-body">
                                    You can return unused items within 30 days of purchase for a full refund. Please see our <a href="/return-policy">Return Policy</a> page for more details.
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
                </div>
            </div>
        </div>


    </main>

    {{!-- Modal dan Toast (pastikan ID unik jika perlu) --}}
    <div class="toast-container position-fixed bottom-0 end-0 p-3" style="z-index: 1100">
        <div id="singleProductToast" class="toast align-items-center text-bg-dark border-0" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="d-flex">
                <div class="toast-body" id="singleProductToastBody"></div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
        </div>
    </div>
    
    {{!-- Modal Konfirmasi Toggle Wishlist untuk Single Product --}}
    <div class="modal fade" id="confirmToggleWishlistModalSingle" tabindex="-1" aria-labelledby="confirmToggleModalLabelSingle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="confirmToggleModalLabelSingle">Confirm Action</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" id="confirmToggleWishlistModalBodySingle">
                    Are you sure?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="btnConfirmToggleWishlistSingle">Yes, Proceed</button>
                </div>
            </div>
        </div>
    </div>


    {{> footer_main }}

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        const currentProductId = '{{product.id}}';
        const productStock = parseInt('{{product.stock}}') || 0;
        const loggedInUserId = {{#if user}}{{user.id}}{{else}}null{{/if}};
        const productOwnerId = {{product.user_id}};

        // Fungsi untuk menampilkan toast notifikasi
        function showToastOnPage(message, type = 'dark') {
            const toastEl = document.getElementById('singleProductToast'); // Ganti ID jika perlu
            const toastBody = document.getElementById('singleProductToastBody');
            if (!toastEl || !toastBody) {
                console.error('Toast elements for this page not found!');
                return;
            }
            toastEl.classList.remove('text-bg-dark', 'text-bg-success', 'text-bg-danger', 'text-bg-warning', 'text-bg-info');
            let toastTypeClass = 'text-bg-dark';
            if (type === 'success') toastTypeClass = 'text-bg-success';
            else if (type === 'danger') toastTypeClass = 'text-bg-danger';
            else if (type === 'warning') toastTypeClass = 'text-bg-warning';
            else if (type === 'info') toastTypeClass = 'text-bg-info';
            toastEl.classList.add(toastTypeClass);
            toastBody.textContent = message;
            try {
                const toast = bootstrap.Toast.getOrCreateInstance(toastEl);
                toast.show();
            } catch (e) { console.error('Error showing toast:', e); }
        }

        // --- Logika untuk Carousel Gambar Produk ---
        const productCarouselElement = document.getElementById('productImagesCarousel');
        let productCarouselInstance = null;
        if (productCarouselElement) {
            productCarouselInstance = new bootstrap.Carousel(productCarouselElement, {
                interval: 3000, // Default interval
                ride: ({{#if (gt product.images.length 1)}}'carousel'{{else}}false{{/if}}) // Ride hanya jika gambar > 1
            });
            const totalImagesForCarousel = {{#if product.images.length}}{{product.images.length}}{{else}}1{{/if}};
            if (totalImagesForCarousel <= 1 && productCarouselInstance) {
                productCarouselInstance.pause();
            }
        }
        function stopCarousel() {
            if (productCarouselInstance) {
                productCarouselInstance.pause();
            }
        }
        function changeMainImage(newImageUrl, clickedThumbnail) {
            const mainImage = document.getElementById('mainProductImage');
            if (mainImage) mainImage.src = newImageUrl;
            document.querySelectorAll('.thumbnail-item img').forEach(img => img.classList.remove('active-thumbnail'));
            if (clickedThumbnail) clickedThumbnail.classList.add('active-thumbnail');
            stopCarousel();
        }
        
        // --- Logika untuk Tombol Kuantitas ---
        const qtyInputSingle = document.getElementById('quantitySingleProduct');
        const btnMinusSingle = document.getElementById('button-minus-single');
        const btnPlusSingle = document.getElementById('button-plus-single');
        if(btnMinusSingle && qtyInputSingle) {
            btnMinusSingle.addEventListener('click', () => {
                let val = parseInt(qtyInputSingle.value);
                if (val > 1) qtyInputSingle.value = val - 1;
            });
        }
        if(btnPlusSingle && qtyInputSingle) {
            btnPlusSingle.addEventListener('click', () => {
                let val = parseInt(qtyInputSingle.value);
                if (val < productStock) { // Validasi dengan stok
                    qtyInputSingle.value = val + 1;
                } else {
                    showToastOnPage(`Cannot add more than ${productStock} items (available stock).`, 'warning');
                }
            });
        }

        // --- Logika untuk Tombol Add to Cart ---
        const btnAddToCartPage = document.getElementById('btnAddToCartSingle');
        if (btnAddToCartPage && qtyInputSingle) {
            btnAddToCartPage.addEventListener('click', async () => {
                if (!loggedInUserId) {
                    showToastOnPage('Please login to add items to your cart.', 'warning');
                    // Pertimbangkan redirect ke login: window.location.href = '/login?redirect=/product/' + currentProductId;
                    return;
                }
                const quantity = parseInt(qtyInputSingle.value);
                try {
                    const response = await fetch('/api/cart/add', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ product_id: currentProductId, quantity }),
                        credentials: 'include'
                    });
                    const data = await response.json();
                    if (response.ok && data.success) {
                        showToastOnPage('🛒 Product added to cart!', 'success');
                    } else {
                        showToastOnPage(data.message || 'Failed to add to cart.', 'danger');
                    }
                } catch (error) {
                    console.error('Error adding to cart:', error);
                    showToastOnPage('An error occurred while adding to cart.', 'danger');
                }
            });
        }

        // --- Logika untuk Tombol Wishlist dengan Modal Konfirmasi ---
        let actionToConfirmWishlist = null; 
        const btnToggleWishlistPage = document.getElementById('btnToggleWishlistPage');
        const confirmToggleWishlistModalElement = document.getElementById('confirmToggleWishlistModalSingle');
        const confirmToggleWishlistModal = confirmToggleWishlistModalElement ? new bootstrap.Modal(confirmToggleWishlistModalElement) : null;
        const confirmToggleWishlistModalBody = document.getElementById('confirmToggleWishlistModalBodySingle');
        const btnConfirmToggleWishlistAction = document.getElementById('btnConfirmToggleWishlistSingle');

        if (btnToggleWishlistPage) {
            btnToggleWishlistPage.addEventListener('click', function() {
                if (!loggedInUserId) {
                    showToastOnPage('Please login to manage your wishlist.', 'warning');
                    return;
                }
                const isCurrentlyWishlisted = this.classList.contains('wishlisted');
                if (isCurrentlyWishlisted) {
                    actionToConfirmWishlist = 'remove';
                    if(confirmToggleWishlistModalBody) confirmToggleWishlistModalBody.textContent = 'Are you sure you want to remove this item from your wishlist?';
                    if(btnConfirmToggleWishlistAction) {
                        btnConfirmToggleWishlistAction.classList.remove('btn-primary');
                        btnConfirmToggleWishlistAction.classList.add('btn-danger');
                        btnConfirmToggleWishlistAction.textContent = 'Yes, Remove';
                    }
                } else {
                    actionToConfirmWishlist = 'add';
                    if(confirmToggleWishlistModalBody) confirmToggleWishlistModalBody.textContent = 'Are you sure you want to add this item to your wishlist?';
                    if(btnConfirmToggleWishlistAction) {
                        btnConfirmToggleWishlistAction.classList.remove('btn-danger');
                        btnConfirmToggleWishlistAction.classList.add('btn-primary');
                        btnConfirmToggleWishlistAction.textContent = 'Yes, Add';
                    }
                }
                if (confirmToggleWishlistModal) confirmToggleWishlistModal.show();
            });
        }
        if (btnConfirmToggleWishlistAction) {
            btnConfirmToggleWishlistAction.addEventListener('click', async () => {
                if (currentProductId && actionToConfirmWishlist) {
                    await proceedToggleWishlist(currentProductId);
                }
                if (confirmToggleWishlistModal) confirmToggleWishlistModal.hide();
            });
        }
        async function proceedToggleWishlist(productId) {
            console.log('[WISHLIST PAGE] Proceeding to toggle wishlist for product ID:', productId, "Action:", actionToConfirmWishlist);
            let response;
            try {
                response = await fetch('/auth/wishlist', { 
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ product_id: productId }),
                    credentials: 'include'
                });
                const data = await response.json();
                if (response.ok) {
                    const iconElement = btnToggleWishlistPage.querySelector('i');
                    const textElement = btnToggleWishlistPage.querySelector('span');
                    if (data.message === 'Berhasil ditambahkan ke wishlist!') {
                        btnToggleWishlistPage.classList.add('wishlisted', 'active');
                        btnToggleWishlistPage.classList.replace('btn-outline-secondary', 'btn-danger');
                        if(iconElement) { iconElement.className = 'bi bi-heart-fill text-danger'; }
                        if(textElement) textElement.textContent = ' Remove from Wishlist';
                        showToastOnPage('✅ Added to wishlist!', 'success');
                    } else {
                        btnToggleWishlistPage.classList.remove('wishlisted', 'active');
                        btnToggleWishlistPage.classList.replace('btn-danger', 'btn-outline-secondary');
                        if(iconElement) { iconElement.className = 'bi bi-heart'; }
                        if(textElement) textElement.textContent = ' Add to Wishlist';
                        showToastOnPage('❌ Removed from wishlist!');
                    }
                } else {
                    showToastOnPage(data.message || 'Failed to process wishlist', 'danger');
                }
            } catch (err) {
                console.error('[WISHLIST PAGE] Fetch Error:', err);
                if (response && response.status === 401) { 
                    showToastOnPage('You must be logged in to use wishlist.', 'warning');
                } else {
                    showToastOnPage('An error occurred. Please try again.', 'danger');
                }
            }
            actionToConfirmWishlist = null; 
        }

        // --- Logika untuk Tombol Chat with Seller ---
        const btnChatWithSeller = document.getElementById('btnChatWithSeller');
        if (btnChatWithSeller) {
            btnChatWithSeller.addEventListener('click', function() {
                if (!loggedInUserId) {
                    showToastOnPage('Please login to chat with the seller.', 'warning');
                    return;
                }
                const sellerId = this.dataset.sellerId;
                console.log('Initiating chat with seller ID:', sellerId);
                showToastOnPage('💬 Chat with seller feature coming soon!', 'info');
            });
        }

        // --- Logika untuk Input Bintang Rating & Submit Form Review ---
        const ratingStarsContainer = document.getElementById('productRatingStars');
        const ratingValueInput = document.getElementById('ratingValueInput');
        if (ratingStarsContainer && ratingValueInput) {
            const stars = ratingStarsContainer.querySelectorAll('i');
            function setStarsVisual(rating) {
                stars.forEach(star => {
                    if (parseInt(star.dataset.value) <= rating) {
                        star.classList.remove('bi-star');
                        star.classList.add('bi-star-fill', 'selected');
                    } else {
                        star.classList.remove('bi-star-fill', 'selected');
                        star.classList.add('bi-star');
                    }
                });
            }
            function highlightStars(rating) {
                stars.forEach(star => {
                    star.classList.remove('hovered'); // Hapus hover dari semua dulu
                    if (parseInt(star.dataset.value) <= rating) {
                        star.classList.add('hovered');
                    }
                });
            }
            stars.forEach(star => {
                star.addEventListener('mouseover', () => highlightStars(parseInt(star.dataset.value)));
                star.addEventListener('mouseout', () => {
                    const currentSelectedRating = parseInt(ratingValueInput.value) || 0;
                    setStarsVisual(currentSelectedRating); 
                    stars.forEach(s => s.classList.remove('hovered'));
                });
                star.addEventListener('click', () => {
                    const value = parseInt(star.dataset.value);
                    ratingValueInput.value = value;
                    setStarsVisual(value);
                    console.log('Rating selected:', value);
                });
            });
        }

        const formReviewProduct = document.getElementById('formReviewProduct');
        if (formReviewProduct) {
            formReviewProduct.addEventListener('submit', async function(event) {
                event.preventDefault();
                if (!loggedInUserId) {
                    showToastOnPage('Please login to submit a review.', 'warning');
                    return;
                }
                const rating = ratingValueInput.value;
                const review_text = document.getElementById('reviewText').value;
                if (!rating) {
                    showToastOnPage('Please provide a star rating.', 'warning');
                    return;
                }
                console.log('[REVIEW] Submitting review. Product ID:', currentProductId, 'Rating:', rating, 'Text:', review_text);
                try {
                    const response = await fetch(`/api/products/${currentProductId}/reviews`, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ rating: parseInt(rating), review_text }),
                        credentials: 'include'
                    });
                    const data = await response.json();
                    if (response.ok && data.success) {
                        showToastOnPage('⭐ Thank you for your review! It will appear after page reload.', 'success');
                        formReviewProduct.reset();
                        if(ratingValueInput && ratingStarsContainer) {
                            ratingValueInput.value = "";
                            setStarsVisual(0);
                        }
                        // Untuk update daftar review secara dinamis, perlu fetch ulang review atau tambah review baru ke DOM
                        // setTimeout(() => window.location.reload(), 2000); // Reload untuk lihat review baru
                    } else {
                        showToastOnPage(data.message || 'Failed to submit review.', 'danger');
                    }
                } catch (err) {
                    console.error('[REVIEW] Submit Error:', err);
                    showToastOnPage('An error occurred while submitting the review.', 'danger');
                }
            });
        }
        
        // Fungsi untuk mengaktifkan tab review saat link jumlah review diklik
        function activateReviewTab(event) {
            event.preventDefault(); // Mencegah default # link behavior jika ada
            const reviewTabButton = document.getElementById('reviews-tab');
            if (reviewTabButton) {
                const tab = new bootstrap.Tab(reviewTabButton);
                tab.show();
                // Scroll ke section tab setelah tab aktif
                const tabContentElement = document.getElementById('productInfoTabs');
                if (tabContentElement) {
                    tabContentElement.scrollIntoView({ behavior: 'smooth', block: 'start' });
                }
            }
        }
    </script>
</body>
</html>